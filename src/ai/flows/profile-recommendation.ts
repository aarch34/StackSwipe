// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview AI-driven profile recommendations based on user networking goals and profile details.
 *
 * - profileRecommendation - A function that recommends relevant profiles.
 * - ProfileRecommendationInput - The input type for the profileRecommendation function.
 * - ProfileRecommendationOutput - The return type for the profileRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ProfileRecommendationInputSchema = z.object({
  networkingGoals: z
    .string()
    .describe('The networking goals of the user, e.g., mentor, mentee, teammate, looking for referrals.'),
  profileDetails: z.string().describe('The profile details of the user, including bio, headline, current work, skills, and interests.'),
});

export type ProfileRecommendationInput = z.infer<typeof ProfileRecommendationInputSchema>;

const ProfileRecommendationOutputSchema = z.object({
  recommendedProfiles: z
    .array(z.string())
    .describe('A list of recommended profile summaries based on the user networking goals and profile details.'),
});

export type ProfileRecommendationOutput = z.infer<typeof ProfileRecommendationOutputSchema>;

export async function profileRecommendation(input: ProfileRecommendationInput): Promise<ProfileRecommendationOutput> {
  return profileRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'profileRecommendationPrompt',
  input: {schema: ProfileRecommendationInputSchema},
  output: {schema: ProfileRecommendationOutputSchema},
  prompt: `You are an AI assistant designed to provide profile recommendations based on user networking goals and profile details.

Given the following networking goals and profile details, recommend a list of relevant profile summaries.

Networking Goals: {{{networkingGoals}}}
Profile Details: {{{profileDetails}}}

Recommended Profiles:`, // The prompt should request for "profile summaries", so the model doesn't have to return the whole profile.
});

const profileRecommendationFlow = ai.defineFlow(
  {
    name: 'profileRecommendationFlow',
    inputSchema: ProfileRecommendationInputSchema,
    outputSchema: ProfileRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
